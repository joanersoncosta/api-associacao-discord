name: continuous-integration with Github Actions

on:
  push:
    branches: 
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Login no Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven

      - name: Build Application jar
        run: mvn clean package -DskipTests

      - name: Build Docker Image
        env:
          DATASOURCE_URL: ${{ secrets.DATASOURCE_URL }}
          DATASOURCE_USER: ${{ secrets.DATASOURCE_USER }}
          DATASOURCE_PASS: ${{ secrets.DATASOURCE_PASS }}
          ID_CHANNEL_DISCORD: ${{ secrets.ID_CHANNEL_DISCORD }}
          DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
          AWS_URL: ${{ secrets.AWS_URL }}
        run: |
          cp target/*.jar app.jar
          docker build \
            --build-arg DATASOURCE_URL=$DATASOURCE_URL \
            --build-arg DATASOURCE_USER=$DATASOURCE_USER \
            --build-arg DATASOURCE_PASS=$DATASOURCE_PASS \
            --build-arg ID_CHANNEL_DISCORD=$ID_CHANNEL_DISCORD \
            --build-arg DISCORD_TOKEN=$DISCORD_TOKEN \
            --build-arg AWS_URL=$AWS_URL \
            -t joanersoncosta/associacao-discord:latest .

      - name: Push Docker Image
        run: |
          docker tag joanersoncosta/associacao-discord:latest joanersoncosta/associacao-discord:${{ github.run_id }}
          docker push joanersoncosta/associacao-discord:latest
          docker push joanersoncosta/associacao-discord:${{ github.run_id }}

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy via SSH
        run: |
          ssh ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} << 'EOF'
            docker pull joanersoncosta/associacao-discord:latest

            # Para o container antigo, se estiver rodando
            docker stop associacao-discord || true
            docker rm associacao-discord || true
            # Sobe novo container na porta 8080 com as variáveis necessárias 
            docker run -d --name associacao-discord \
              -e DATASOURCE_URL=${{ secrets.DATASOURCE_URL }} \
              -e DATASOURCE_USER=${{ secrets.DATASOURCE_USER }} \
              -e DATASOURCE_PASS=${{ secrets.DATASOURCE_PASS }} \
              -e ID_CHANNEL_DISCORD=${{ secrets.ID_CHANNEL_DISCORD }} \
              -e DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }} \
              -e AWS_URL=${{ secrets.AWS_URL }} \
              -p 8080:8080 \
              joanersoncosta/associacao-discord:latest
          EOF
          
